name: Regression-run
on:
  schedule:
    - cron: "* */5 * * *"  # every 5 h
  workflow_dispatch:
    inputs:
      build_preset:
        type: choice
        default: "relwithdebinfo"
        description: "Build preset"
        options:
          - relwithdebinfo
          - release-asan
      runner_label:
        type: string
        default: "auto-provisioned"
        description: "runner label"
      commit_sha:
        type: string
        default: ""

jobs:
  main:
    name: Build and test all ydb tests
    runs-on: [ self-hosted, "${{ inputs.runner_label || 'auto-provisioned' }}", "${{ format('build-preset-{0}', inputs.build_preset || 'relwithdebinfo') }}" ]
    env:
      ALLOWED_BRANCHES: "main stable-24-3"
    steps:
    - name: Check branch
      id: check_branch
      run: |
        BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
        echo "Running on branch: $BRANCH_NAME"
        if [[ ! " $ALLOWED_BRANCHES " =~ .*\ $BRANCH_NAME\ .* ]]; then
          echo "This workflow runs only on branches: $ALLOWED_BRANCHES"
          exit 1
        fi

    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.commit_sha }}

    - name: Setup ssh key for slice 
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SLICE_QA_SSH_PRIVATE_KEY }}

    - name: Setup ydb access
      uses: ./.github/actions/setup_ci_ydb_service_account_key_file_credentials
      with:
        ci_ydb_service_account_key_file_credentials: ${{ secrets.CI_YDB_SERVICE_ACCOUNT_KEY_FILE_CREDENTIALS }}

    - name: Build and test
      uses: ./.github/actions/build_and_test_ya
      with:
        build_preset: ${{ inputs.build_preset }}
        increment: false
        run_build: true
        run_tests: true
        test_retry_count: 3
        test_size: small,medium,large
        test_type: unittest,py3test,py2test,pytest
        test_threads: 52
        put_build_results_to_cache: false
        secs: ${{ format('{{"TESTMO_TOKEN2":"{0}","AWS_KEY_ID":"{1}","AWS_KEY_VALUE":"{2}","REMOTE_CACHE_USERNAME":"{3}","REMOTE_CACHE_PASSWORD":"{4}"}}',
          secrets.TESTMO_TOKEN2, secrets.AWS_KEY_ID, secrets.AWS_KEY_VALUE, secrets.REMOTE_CACHE_USERNAME, secrets.REMOTE_CACHE_PASSWORD ) }}
        vars: ${{ format('{{"AWS_BUCKET":"{0}","AWS_ENDPOINT":"{1}","REMOTE_CACHE_URL":"{2}","TESTMO_URL":"{3}","TESTMO_PROJECT_ID":"{4}"}}',
          vars.AWS_BUCKET, vars.AWS_ENDPOINT, vars.REMOTE_CACHE_URL_YA, vars.TESTMO_URL, vars.TESTMO_PROJECT_ID ) }}
